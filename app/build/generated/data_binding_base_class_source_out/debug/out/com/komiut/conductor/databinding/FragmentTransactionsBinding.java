// Generated by view binder compiler. Do not edit!
package com.komiut.conductor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.komiut.conductor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransactionsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final TextView error;

  @NonNull
  public final ConstraintLayout mainContent;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private FragmentTransactionsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout3, @NonNull TextView error,
      @NonNull ConstraintLayout mainContent, @NonNull ProgressBar progress,
      @NonNull RecyclerView recyclerView, @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull TextView textView6) {
    this.rootView = rootView;
    this.constraintLayout3 = constraintLayout3;
    this.error = error;
    this.mainContent = mainContent;
    this.progress = progress;
    this.recyclerView = recyclerView;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transactions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = rootView.findViewById(id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.error;
      TextView error = rootView.findViewById(id);
      if (error == null) {
        break missingId;
      }

      id = R.id.mainContent;
      ConstraintLayout mainContent = rootView.findViewById(id);
      if (mainContent == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = rootView.findViewById(id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = rootView.findViewById(id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = rootView.findViewById(id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = rootView.findViewById(id);
      if (textView6 == null) {
        break missingId;
      }

      return new FragmentTransactionsBinding((ConstraintLayout) rootView, constraintLayout3, error,
          mainContent, progress, recyclerView, textView4, textView5, textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
