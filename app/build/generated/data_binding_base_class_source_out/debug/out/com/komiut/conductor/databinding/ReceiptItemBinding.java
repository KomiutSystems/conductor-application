// Generated by view binder compiler. Do not edit!
package com.komiut.conductor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.komiut.conductor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReceiptItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnPrintReceipt;

  @NonNull
  public final TextView phonenumber;

  @NonNull
  public final TextView plate;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView username;

  private ReceiptItemBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnPrintReceipt,
      @NonNull TextView phonenumber, @NonNull TextView plate, @NonNull TextView status,
      @NonNull TextView username) {
    this.rootView = rootView;
    this.btnPrintReceipt = btnPrintReceipt;
    this.phonenumber = phonenumber;
    this.plate = plate;
    this.status = status;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReceiptItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReceiptItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.receipt_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReceiptItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPrintReceipt;
      Button btnPrintReceipt = rootView.findViewById(id);
      if (btnPrintReceipt == null) {
        break missingId;
      }

      id = R.id.phonenumber;
      TextView phonenumber = rootView.findViewById(id);
      if (phonenumber == null) {
        break missingId;
      }

      id = R.id.plate;
      TextView plate = rootView.findViewById(id);
      if (plate == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = rootView.findViewById(id);
      if (status == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = rootView.findViewById(id);
      if (username == null) {
        break missingId;
      }

      return new ReceiptItemBinding((ConstraintLayout) rootView, btnPrintReceipt, phonenumber,
          plate, status, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
